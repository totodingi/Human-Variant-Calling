
projectDir = "../../"
dataDir = f"{projectDir}datasets/H3A_VarCall_TestData/WES_chr1_50X_E0.005/"
# reads = f"{dataDir}*read*"
read1 = f"{dataDir}WES_chr1_50X_E0.005_merged_read1.fq.gz"
read2 = f"{dataDir}WES_chr1_50X_E0.005_merged_read2.fq.gz"
# read_1 = f"{projectDir}datasets/H3A_VarCall_TestData/WES_chr1_50X_E0.005/WES_chr1_50X_E0.005_merged_read1.fq.gz"
# read_2 = "../../datasets/H3A_VarCall_TestData/WES_chr1_50X_E0.005/WES_chr1_50X_E0.005_merged_read2.fq.gz"

rule run_fastqc:
    input:
        read1,
        read2

    threads: 10
    output:
        directory('../results/fastqc/')
    message:
        "Now running fastqc on the raw data"
    shell:
        "mkdir -p {output} &&  "
        "fastqc -o {output} --extract {read1} {read2} "


rule trim_sequences:
    input:
        read1,
        read2
    output:
        directory('../results/trimmomatic/')
    threads:
        10
    message:
        "Now running trimmomatic on the sequences"
    shell:
        "mkdir -p {output} \n"
        "trimmomatic PE {read1} {read2} -baseout '{output}filtered_reads.fq.gz' "
        "-trimlog '{output}trimlog' -phred33 -threads 10"
        " HEADCROP:15 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36"

import os

def get_seqs(dir):
    print(dir)
    files = []
    for root, directory, fil in os.walk(str(dir)):
        files.append(fil)
    return files

rule trimmed_fastqc:
    input:
        rules.trim_sequences.output

    output:
        directory('../results/trimmed_fastqc/')

    message:
        "Now running fastqc on trimmed sequences"
    run:
        shell("mkdir -p {output}")
        for file in get_seqs(input):
            if str(file).endswith(".fq.gz"):
                file_path = str(input) + str(file)
                shell("fastqc -o {output} --extract {file_path}")

rule all:
    input:
        rules.run_fastqc.output,
        rules.trim_sequences.output,
        rules.trimmed_fastqc.output
    message:
        "Running the workflow"